(()=>{"use strict";new Vue({el:"#app",data:{products:[],productFix:[],basket:[],textBasket:"Корзина",showBasket:!1,summBasket:0,countBasket:0,searchWord:"",imgCatalog:"img/not-found.jpg",catalogUrl:"/catalogData.json"},components:{search:{template:' <div>\n                <form action="#" class="search-form">\n                    <input type="text" class="search-field" v-model="mess">\n                    <button class="btn-search" type="submit" @click="$emit(\'searh\', mess)">\n                        <i class="fas fa-search"></i>\n                    </button>\n                </form>\n            </div>',data:()=>({mess:""}),methods:{sendInfo(){}}},basket:{props:["basket","visibility","summbasket"],components:{"basket-item":{props:["basketItem"],template:'\n                            <tr align="center">\n                            <td><img :src=fullPath(basketItem.path) alt=""><br>{{basketItem.product_name}}</td>\n                            <td>{{basketItem.price}}</td>\n                            <td><button @click="$parent.$emit(\'remove\', basketItem)">-</button>&nbsp;{{ basketItem.quantity }}&nbsp;\n                            <button @click="$parent.$emit(\'add\', basketItem)">+</button></td>\n                            <td>{{basketItem.quantity*basketItem.price}}</td>\n                        </tr>\n    ',methods:{fullPath:t=>"img/small/"+t}}},template:'<div class="basket" v-show="visibility">\n                <div class="basket_up">\n                    <div class="basket_close" @click="this.$parent.closeBasket"> X </div>\n                </div>\n                   <div class="basket_down">\n                    <br><br>\n                    <table align="center" border="1">\n                        <tr>\n                            <th width="200">Наименование</th>\n                            <th width="100">Цена</th>\n                            <th width="100">Количество</th>\n                            <th width="100">Сумма</th>\n                        </tr>\n                        <basket-item v-for="item of basket" :key="item.id_product" :basket-item="item"></basket-item>\n                        <tr><td colspan="3"><b>ИТОГО:</b></td><td align="center"><b>{{ summbasket }}</b></td></tr>\n                    </table>\n                </div>\n</div>\n'},products:{props:["products","img"],components:{product:{props:["product"],template:'<div class="product-item">\n<img :src=fullPath(product.path) alt="Some img" width="250">\n<div class="desk">\n<h3>{{ product.product_name }}</h3>\n<p>{{ product.price }} $</p>\n<button class="buy-btn" @click="$parent.$emit(\'add-product\',product)">Купить</button>\n</div>\n</div>\n',methods:{fullPath:t=>"img/"+t}}},template:'<div class="products"><product v-for="item of products" :key="item.id_product" :product="item"></product></div>'}},methods:{getJson:t=>fetch(t).then((t=>t.json())).catch((t=>{console.log(t)})),closeBasket(){this.showBasket=!1},addProduct(t){let s=0;for(let e of this.basket)e.id_product==t.id_product&&(e.quantity++,s=1);if(0==s){const s=Object.assign({quantity:1},t);this.basket.push(s)}this.countBasket=this.countProductsInBasket(),this.textBasket="Корзина("+this.countBasket+")",this.summBasket=this.summProductsInBasket()},delProduct(t){for(let s of this.basket)s.id_product==t.id_product&&(s.quantity--,s.quantity<0&&(s.quantity=0));this.countBasket=this.countProductsInBasket(),this.textBasket="Корзина("+this.countBasket+")",this.summBasket=this.summProductsInBasket(),this.clearBasket()},search(t){this.products=[...this.productFix];let s=[];for(let e of this.products){let a=e.product_name.toUpperCase();t=t.toUpperCase(),a.indexOf(t)>-1&&s.push(e)}this.products=[...s]},countProductsInBasket(){let t=0;for(let s of this.basket)t+=s.quantity;return t},clearBasket(){let t=[];for(let s of this.basket)0!=s.quantity&&t.push(s);this.basket=[...t]},summProductsInBasket(){let t=0;for(let s of this.basket)t+=s.quantity*s.price;return t}},mounted(){this.getJson("getProducts.json").then((t=>{for(let s of t)this.products.push(s),this.productFix.push(s)}))}})})();